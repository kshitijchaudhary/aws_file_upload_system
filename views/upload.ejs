<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>File Upload</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/styles.css">
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="/upload">Home</a>
            <ul class="navbar-nav ms-auto">
                <li class="nav-item">
                    <a class="nav-link" href="/auth/logout">Logout</a>
                </li>
            </ul>
        </div>
    </nav>

    <div class="container">
        <div class="upload-container">
            <h2 class="text-center mb-4">File Upload</h2>
            
            <div class="student-details text-center mb-4">
                <h4>Student Name: Kshitij Chaudhary</h4>
                <h5>Student Number: C0920457</h5>
            </div>

            <form id="uploadForm" action="/upload" method="POST" enctype="multipart/form-data">
                <div id="drop-area">
                    <p>Drag & Drop your files here</p>
                    <p>OR</p>
                    <input 
                        type="file" 
                        id="fileInput" 
                        name="file"
                        accept=".pdf,image/jpeg,image/png" 
                        style="display: none;"
                    >
                    <label for="fileInput" class="btn btn-primary">Browse Files</label>
                </div>
            
                <div id="fileDetails" class="mt-3 text-center"></div>
            
                <div class="progress mt-3" style="display: none;">
                    <div 
                        id="progressBar" 
                        class="progress-bar" 
                        role="progressbar" 
                        style="width: 0%"
                    ></div>
                </div>
            
                <div class="text-center mt-3">
                    <button 
                        type="submit" 
                        id="uploadButton" 
                        class="btn btn-success" 
                        disabled
                    >
                        Upload File
                    </button>
                </div>
            </form>
            

            <div id="messageArea" class="mt-3 text-center"></div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

    <script>
        const dropArea = document.getElementById('drop-area');
        const fileInput = document.getElementById('fileInput');
        const fileDetails = document.getElementById('fileDetails');
        const uploadButton = document.getElementById('uploadButton');
        const progressBar = document.getElementById('progressBar');
        const progressContainer = document.querySelector('.progress');
        const messageArea = document.getElementById('messageArea');

        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            dropArea.addEventListener(eventName, preventDefaults, false);
        });

        function preventDefaults(e) {
            e.preventDefault();
            e.stopPropagation();
        }

        ['dragenter', 'dragover'].forEach(eventName => {
            dropArea.addEventListener(eventName, highlight, false);
        });

        ['dragleave', 'drop'].forEach(eventName => {
            dropArea.addEventListener(eventName, unhighlight, false);
        });

        function highlight() {
            dropArea.classList.add('highlight');
        }

        function unhighlight() {
            dropArea.classList.remove('highlight');
        }

        dropArea.addEventListener('drop', handleDrop, false);
        fileInput.addEventListener('change', handleFiles, false);

        function handleDrop(e) {
            const dt = e.dataTransfer;
            const files = dt.files;
            if (files.length > 0) {
                fileInput.files = files; // Set the dropped file to the hidden input
                handleFileSelection(files[0]);
    }
}

        function handleFiles() {
            handleFileSelection(fileInput.files[0]);
        }

        function handleFileSelection(file) {
            messageArea.textContent = '';
            messageArea.className = '';
            uploadButton.disabled = true;

            if (file) {
                const allowedTypes = ['application/pdf', 'image/jpeg', 'image/png'];
                if (!allowedTypes.includes(file.type)) {
                    messageArea.textContent = 'Invalid file type. Only PDF, JPEG, and PNG are allowed.';
                    messageArea.classList.add('text-danger');
                    return;
                }

                if (file.size > 10 * 1024 * 1024) {
                    messageArea.textContent = 'File size exceeds 10MB limit.';
                    messageArea.classList.add('text-danger');
                    return;
                }

                fileDetails.textContent = `File: ${file.name} (${(file.size / 1024 / 1024).toFixed(2)} MB)`;
                uploadButton.disabled = false;
            }
        }

        document.getElementById('uploadForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const file = fileInput.files[0];
            
            if (!file) {
                messageArea.textContent = 'Please select a file';
                messageArea.classList.add('text-danger');
                return;
            }

            const formData = new FormData();
            formData.append('file', file);

            try {
                progressContainer.style.display = 'block';
                messageArea.textContent = '';
                messageArea.className = '';

                const response = await axios.post('/upload', formData, {
                    onUploadProgress: (progressEvent) => {
                        const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);
                        progressBar.style.width = `${percentCompleted}%`;
                    }
                });

                messageArea.textContent = 'File uploaded successfully!';
                messageArea.classList.add('text-success');
                
                fileInput.value = '';
                fileDetails.textContent = '';
                uploadButton.disabled = true;
                
                setTimeout(() => {
                    progressContainer.style.display = 'none';
                }, 2000);

            } catch (error) {
                messageArea.textContent = `Upload failed: ${error.response?.data?.error || 'Unknown error'}`;
                messageArea.classList.add('text-danger');
            }
        });
    </script>
</body>
</html>